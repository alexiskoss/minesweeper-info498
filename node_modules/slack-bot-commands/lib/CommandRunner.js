'use strict';

var _regenerator = require('babel-runtime/regenerator');

var _regenerator2 = _interopRequireDefault(_regenerator);

var _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Help = require('./plugins/Help');
var slack = require('slack');
var bot = slack.rtm.client();

var CommandRunner = function CommandRunner(plugins, token) {
	return function () {
		bot.message(function () {
			var _ref = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee(message) {
				var instantiatedPlugins, withHelpPlugin;
				return _regenerator2.default.wrap(function _callee$(_context) {
					while (1) {
						switch (_context.prev = _context.next) {
							case 0:
								if (message.subtype !== 'bot_message') {
									instantiatedPlugins = plugins.map(function (plugin) {
										return new plugin(message);
									});
									// The help plugin wants all the instantiated plugins to do its thing

									withHelpPlugin = instantiatedPlugins.concat(new Help(message, instantiatedPlugins));

									withHelpPlugin.map(function (plugin) {
										return plugin.run();
									});
								}

							case 1:
							case 'end':
								return _context.stop();
						}
					}
				}, _callee, undefined);
			}));

			return function (_x) {
				return _ref.apply(this, arguments);
			};
		}());
		// start listening to the slack team associated to the token
		bot.listen({ token: token });
	};
};

module.exports = CommandRunner;